library community.livecode.trevordevore.nsworkspace	use com.livecode.foreign	use com.livecode.objc	metadata title is "NSWorkspace"	metadata author is "Trevor DeVore"	metadata version is "0.1.0"	private foreign handler ObjC_NSWorkspaceSharedWorkspace() returns ObjcRetainedId binds to "objc:NSWorkspace.+sharedWorkspace"	private foreign handler ObjC_NSWorkspaceSelectFile(in pSharedWorkspace as ObjcId, in pFilename as ObjcId, in pRootedAtPath as ObjcId) returns CBool binds to "objc:NSWorkspace.-selectFile:inFileViewerRootedAtPath:"	private foreign handler ObjC_NSWorkspaceLaunchApplication(in pSharedWorkspace as ObjcId, in pAppName as ObjcId) returns CBool binds to "objc:NSWorkspace.launchApplication:"	private foreign handler ObjC_NSWorkspaceFrontmostApplication(in pSharedWorkspace as ObjcId) returns ObjcId binds to "objc:NSWorkspace.-frontmostApplication"	/**	Summary: Reveals a file or folder in the Finder.	Parameters:	pFilename: Path to the file or folder to reveal.	Returns: Boolean	*/	public handler NSWorkspaceSelectFile(in pFilename as String) returns Boolean		variable sharedWorkspace as ObjcObject		variable wasSuccessful as Boolean		unsafe			put ObjC_NSWorkspaceSharedWorkspace() into sharedWorkspace			put ObjC_NSWorkspaceSelectFile(sharedWorkspace, StringToNSString(pFilename), StringToNSString("")) into wasSuccessful		end unsafe		return wasSuccessful	end handler	/**	Summary: Launchs the specified application.	Parameters:	pAppName: Name of the application to open.	Description:	pAppName does not need to be the full path. For example, "LiveCode Business 9.0.0.app" would work if	"LiveCode Business 9.0.0.app" was installed in `/Applications`.	Returns: Boolean	*/	public handler NSWorkspaceLaunchApplication(in pAppName as String) returns Boolean		variable sharedWorkspace as ObjcObject		variable wasSuccessful as Boolean		unsafe			put ObjC_NSWorkspaceSharedWorkspace() into sharedWorkspace			put ObjC_NSWorkspaceLaunchApplication(sharedWorkspace, StringToNSString(pAppName)) into wasSuccessful		end unsafe		return wasSuccessful	end handler	public handler NSWorkspaceGetFrontmostApplication		variable sharedWorkspace as ObjcObject		variable runningApplication as ObjcObject		unsafe			put ObjC_NSWorkspaceSharedWorkspace() into sharedWorkspace			put ObjC_NSWorkspaceFrontmostApplication(sharedWorkspace) into runningApplication		end unsafe    /*      NSString *t_error = nil;      pid_t t_psn;      if (t_error == nil) {            NSRunningApplication * t_app = nil;            t_app = [[NSWorkspace sharedWorkspace] frontmostApplication];            if (t_app != nil)                t_psn = [t_app processIdentifier];            else                t_error = @"unable to get current process";      }      if (t_error == nil)      {        return [NSString stringWithFormat:@"%d", t_psn];      }      else      {        // Return error message as string            return t_error;        }    */  end handlerend library